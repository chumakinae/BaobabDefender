# -*- coding: utf-8 -*-
import re
import sqlite3
import uuid
import datetime
import pytz
import telebot
from geopy.geocoders import Nominatim
from telebot import types
from tzwhere import tzwhere
import time

bot = telebot.TeleBot('7090977563:AAGi-MjX7V8o378Sed1s7wfaUOK0UCP0td4')

conn = sqlite3.connect('db/data.db')
cursor = conn.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users (
                    id TEXT PRIMARY KEY,
                    user_id INTEGER,
                    user_name TEXT,
                    tz_info TEXT,
                    time_rec TEXT,
                    gr_rec TEXT,
                    gender TEXT,
                    timezone INTEGER,
                    status
                )""")


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ó–∞–ø—É—Å—Ç–∏—Ç—å")
    markup.add(btn1)
    bot.send_message(message.from_user.id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å. –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –∑–∞ N –¥–Ω–µ–π —É—Å–∏–ª–∏—Ç—å –∑–∞—â–∏—Ç—É –≤–∞—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ –æ–±—É—á–∏—Ç –æ—Å–Ω–æ–≤–∞–º –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–∏–≥–∏–µ–Ω—ã. –í–∞–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ –æ–¥–Ω–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –° –Ω–∞–∏–ª—É—á—à–∏–º–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏, –ö–∏–±–µ—Ä–ø—Ä–æ—Ç–µ–∫—Ç", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == 'üëã –ó–∞–ø—É—Å—Ç–∏—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn2 = types.KeyboardButton('–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–∫–æ—Ä–µ–µ –Ω–∞—á–Ω—ë–º!')
        markup.add(btn2)
        bot.send_message(message.from_user.id, "–í—ã —Å–¥–µ–ª–∞–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π —à–∞–≥ –Ω–∞ –ø—É—Ç–∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ –º—ã –Ω–∞—á–Ω–µ–º.", reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        bot.register_next_step_handler(message, first_question)


def first_question(message):
    if message.text == '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–∫–æ—Ä–µ–µ –Ω–∞—á–Ω—ë–º!':
        bot.send_message(message.from_user.id, "–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?", reply_markup = telebot.types.ReplyKeyboardRemove()) # —É–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        bot.register_next_step_handler(message, second_question)


def second_question(message):

    global user_id
    global user_name
    global tz_info
    user_id = message.from_user.id
    user_name = message.text
    pattern = r'^[A-Za-z–ê-–Ø–∞-—è–Å—ë]+$'
    if re.match(pattern, user_name):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn21 = types.KeyboardButton('–ï–∂–µ–¥–Ω–µ–≤–Ω–æ')
        btn22 = types.KeyboardButton('–†–∞–±–æ—á–∏–µ –¥–Ω–∏')
        btn23 = types.KeyboardButton('–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏')
        markup.add(btn21, btn22, btn23)
        bot.send_message(message.from_user.id, "–°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å –≥—Ä–∞—Ñ–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.",reply_markup=markup)
        bot.register_next_step_handler(message, pre_get_timezone)
    else:
        bot.send_message(message.from_user.id, "üò≠ –ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ [–∏–º—è/—Ñ–∞–º–∏–ª–∏—é]. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        bot.register_next_step_handler(message, second_question)


def pre_get_timezone(message): # –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å, <---–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ —É—á–∞—Å—Ç–∫–∞ –∫–æ–¥–∞ =\
    global gr_rec
    gr_rec = message.text  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≥—Ä–∞—Ñ–∏–∫ =)
    if message.text == '–ï–∂–µ–¥–Ω–µ–≤–Ω–æ' or message.text == '–†–∞–±–æ—á–∏–µ –¥–Ω–∏' or message.text == '–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏':
        bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å",  reply_markup = telebot.types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, get_timezone)


def get_timezone(message, markup=None):
    global tz_info
    global tz_offset
    global timedelta
    global time_difference
    city = message.text
    geo = Nominatim(user_agent="SuperMon_Bot")
    try:
        location = geo.geocode(city)
    except Exception as e:
        bot.send_message(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –Ω–∞–π—Ç–∏ –≥–æ—Ä–æ–¥: {str(e)}")
        return
    if location is None:
        bot.send_message(message,"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –≥–æ—Ä–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π –∏–ª–∏ —É–∫–∞–∑–∞—Ç—å –±–æ–ª–µ–µ –∫—Ä—É–ø–Ω—ã–π –≥–æ—Ä–æ–¥ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏.")
    else:
        tzw = tzwhere.tzwhere()
        try:
            timezone_str = tzw.tzNameAt(location.latitude, location.longitude)  # –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
            if timezone_str is None:
                bot.send_message(message.from_user.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞.")
                return
        except Exception as e:
            bot.send_message(message.from_user.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {str(e)}")
            return

        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–º–µ—â–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç ¬±–ß–ß:–ú–ú
        tz = pytz.timezone(timezone_str)
        tz_info = datetime.datetime.now(tz=tz).strftime("%z")  # –ü–æ–ª—É—á–∞–µ–º —Å–º–µ—â–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        tz_hours = tz_info[:3]  # –ü–æ–ª—É—á–∞–µ–º —á–∞—Å—ã
        tz_minutes = tz_info[3:]  # –ü–æ–ª—É—á–∞–µ–º –º–∏–Ω—É—Ç—ã

        # –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–∞—Ç—É –ß–ß:–ú–ú
        tz_offset = f"{tz_hours}:{tz_minutes}"
        tz_offset_parts = tz_offset.split(":")
        hours = int(tz_offset_parts[0])
        minutes = int(tz_offset_parts[1])

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç timedelta
        time_difference = datetime.timedelta(hours=hours, minutes=minutes)
        bot.send_message(message.from_user.id, f"–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ {timezone_str} ({tz_info} –æ—Ç GMT).")
        bot.send_message(message.from_user.id, "–í–æ —Å–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏? –ó–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –ß–ß:–ú–ú", reply_markup=markup)
        bot.register_next_step_handler(message, time_recomendation)


def time_recomendation(message):
    global time_rec
    time_rec = message.text
    pattern = r'^[0-9]{2}:[0-9]{2}$' # <---–¥–æ–±–∞–≤–∏—Ç—å —Å–∏–º–≤–æ–ª—ã
    if re.match(pattern, time_rec):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn3 = types.KeyboardButton('–ú—É–∂')
        btn4 = types.KeyboardButton('–ñ–µ–Ω')
        btn5 = types.KeyboardButton('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
        markup.add(btn3, btn4, btn5)
        bot.send_message(message.from_user.id, '–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª.', reply_markup=markup)
        bot.register_next_step_handler(message, fourth_question)
    else:
        bot.send_message(message.from_user.id, "üòî –ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –≤—Ä–µ–º—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥.")
        bot.register_next_step_handler(message, get_timezone)


def fourth_question(message):
    global gender
    gender = message.text
    if message.text == '–ú—É–∂' or message.text == '–ñ–µ–Ω' or message.text == '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
        gender = message.text
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn6 = types.KeyboardButton('–¥–æ 18')
        btn7 = types.KeyboardButton('–æ—Ç 18 –¥–æ 25')
        btn8 = types.KeyboardButton('–æ—Ç 26 –¥–æ 30')
        btn9 = types.KeyboardButton('–æ—Ç 31 –¥–æ 35')
        btn10 = types.KeyboardButton('–æ—Ç 36 –¥–æ 40')
        btn11 = types.KeyboardButton('–æ—Ç 41 –¥–æ 45')
        btn12 = types.KeyboardButton('–æ—Ç 46 –¥–æ 55')
        btn13 = types.KeyboardButton('—Å—Ç–∞—Ä—à–µ 55')
        markup.add(btn6, btn7, btn8, btn9, btn10, btn11, btn12, btn13)
        bot.send_message(message.from_user.id, '–£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç.', reply_markup=markup)
        bot.register_next_step_handler(message, basadate)
    else:
        bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫.')
        bot.register_next_step_handler(message, fourth_question)


def basadate(message):
    global age
    global status
    global A
    age = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    btn14 = types.KeyboardButton('–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ')
    btn15 = types.KeyboardButton('–û—Ç–ª–æ–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ')
    btn16 = types.KeyboardButton('–ú–µ–Ω—é')
    markup.add(btn14, btn15, btn16)
    bot.send_message(message.from_user.id, '–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!', reply_markup=markup)

    if gr_rec == "–ï–∂–µ–¥–Ω–µ–≤–Ω–æ":
        current_time = datetime.datetime.now() + time_difference
        user_time = datetime.datetime.strptime(time_rec, "%H:%M").time()
        day_of_week = datetime.datetime.now().weekday()  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0 - –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 1 - –í—Ç–æ—Ä–Ω–∏–∫, ..., 6 - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)

        if current_time.time() == user_time or day_of_week < 7:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–ü–Ω - –ü—Ç)
            connection = sqlite3.connect('db/data.db')
            cursor = connection.cursor()

            for A in range(1, 31):
                cursor.execute("SELECT choice FROM data_ WHERE N = ?", (A,))
                result = cursor.fetchone()

                if result:
                    bot.send_message(message.from_user.id, result[0])
                    time.sleep(10)  # 10 —Å–µ–∫—É–Ω–¥ –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ => –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π. –î–ª—è –≥—Ä–∞—Ñ–∏–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 86400
                    bot.register_next_step_handler(message, menu)
                else:
                    bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —Å —ç—Ç–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        elif gr_rec == "–í—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏":
            current_time = datetime.datetime.now() + time_difference
            user_time = datetime.datetime.strptime(time_rec, "%H:%M").time()
            day_of_week = datetime.datetime.now().weekday()  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0 - –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 1 - –í—Ç–æ—Ä–Ω–∏–∫, ..., 6 - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)

            if current_time.time() == user_time and day_of_week > 4:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ (–°–± - –í—Å)
                connection = sqlite3.connect('db/data.db')
                cursor = connection.cursor()

                for A in range(1, 31, 2):
                    cursor.execute("SELECT choice FROM data_ WHERE N = ?", (A,))
                    result = cursor.fetchone()

                    if result:
                        bot.send_message(message.from_user.id, result[0])
                        time.sleep(86400)  # —Å—É—Ç–∫–∏ -  –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                        bot.register_next_step_handler(message, menu)
                    else:
                        bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —Å —ç—Ç–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    time.sleep(518400)  # 6 —Å—É—Ç–æ–∫ -  –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        elif gr_rec == "–†–∞–±–æ—á–∏–µ –¥–Ω–∏":
            current_time = datetime.datetime.now() + time_difference
            user_time = datetime.datetime.strptime(time_rec, "%H:%M").time()
            day_of_week = datetime.datetime.now().weekday()  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (0 - –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 1 - –í—Ç–æ—Ä–Ω–∏–∫, ..., 6 - –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)

            if current_time.time() == user_time and day_of_week < 5:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
                connection = sqlite3.connect('db/data.db')
                cursor = connection.cursor()

                for A in range(1, 31):
                    cursor.execute("SELECT choice FROM data_ WHERE N = ?", (A,))
                    result = cursor.fetchone()

                    if result:
                        bot.send_message(message.from_user.id, result[0])
                        time.sleep(86400)  # —Å—É—Ç–∫–∏ -  –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                        bot.register_next_step_handler(message, menu)
                    else:
                        bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ —Å —ç—Ç–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

        else:
            bot.send_message(message.from_user.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑-–∑–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–ª–∏ –¥–Ω—è –Ω–µ–¥–µ–ª–∏")
            '''conn.close()'''


def menu(message):
    if message.text == "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ":
        conn = sqlite3.connect('db/data.db')
        cursor = conn.cursor()
        new_value = str(A)
        cursor.execute("SELECT status FROM users WHERE user_id = ?", (user_id,))
        row = cursor.fetchone()
        if row is not None:
            current_value = row[0]
            sum_value = current_value + new_value
            cursor.execute("UPDATE users SET status=?  WHERE user_id = ?", (sum_value, user_id))
            conn.commit()
        else:
            bot.send_message(message.from_user.id, menu)
    elif message.text == "–í—ã–ø–æ–ª–Ω–µ–Ω–æ":
        bot.send_message(message.from_user.id, "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫")
    '''connection = sqlite3.connect('db/data.db')
    cursor = connection.cursor()
    cursor.execute(
        f"INSERT INTO users (id, user_id, user_name, tz_info, gr_rec, time_rec, gender) VALUES (?, ?, ?, ?, ?, ?, ?)",
        (str(uuid.uuid4()), user_id, user_name, tz_info, gr_rec, time_rec, gender))
    connection.commit()'''
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    btn17 = types.KeyboardButton('ü•≥ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π –∞–¥–≤–µ–Ω—Ç –ø–æ —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–∏–≥–∏–µ–Ω–µ')
    btn18 = types.KeyboardButton('üòé –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    btn19 = types.KeyboardButton('üßê –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏')
    btn20 = types.KeyboardButton('üëç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è')
    btn21 = types.KeyboardButton('üòá –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π')
    btn22 = types.KeyboardButton('ü§î –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –ø–æ —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–∏–≥–∏–µ–Ω–µ')
    btn23 = types.KeyboardButton('üëÄ –ü–æ–º–æ—â—å')
    btn24 = types.KeyboardButton('üëÄ –û–± –∞–≤—Ç–æ—Ä–∞—Ö')
    markup.add(btn17, btn18, btn19, btn20, btn21, btn22, btn23, btn24)
    bot.send_message(message.from_user.id, '–ú–µ–Ω—é', reply_markup=markup)
    if message.text == 'üòé –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
        connection = sqlite3.connect('db/data.db')
        cursor = connection.cursor()
        try:
            cursor.execute('SELECT user_name, gender, age, gr_rec FROM users WHERE user_id = ?',
                           (message.from_user.id,))
            user_data = cursor.fetchone()
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn26 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ')
            btn27 = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(btn26, btn27)
            if user_data:
                user_name, gender, age, gr_rec = user_data
                response_message = []
                if user_name:
                    response_message.append(f"üôÇ –ò–º—è: {user_name}")
                if gr_rec:
                    response_message.append(f"üëÄ –ì—Ä–∞—Ñ–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {gr_rec}")
                if gender:
                    response_message.append(f"üöª –ü–æ–ª: {gender}")
                if age:
                    response_message.append(f"üë® –í–æ–∑—Ä–∞—Å—Ç: {age}")
                bot.send_message(message.from_user.id, "\n".join(response_message), reply_markup=markup)
                bot.register_next_step_handler(message, reg_again)
        except Exception as e:
            bot.send_message(message.from_user.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
    elif message.text == 'üòá –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π':
        bot_username = bot.get_me().username
        invite_link = f"https://t.me/{bot_username}?start={message.from_user.id}"
        invite_text = "–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É –±–æ—Ç—É –∏ –ø–æ–ª—É—á–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!"
        markup = types.InlineKeyboardMarkup()
        share_button = types.InlineKeyboardButton(text='–ü–æ–¥–µ–ª–∏—Ç—å—Å—è', switch_inline_query=invite_text)
        markup.add(share_button)
        bot.send_message(message.from_user.id, f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π —Å—Å—ã–ª–∫–∏: {invite_link}\n{invite_text}",
                         reply_markup=markup)
        bot.register_next_step_handler(message, menu)
    elif message.text == 'ü§î –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –ø–æ —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–∏–≥–∏–µ–Ω–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn28 = types.KeyboardButton('–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç')
        markup.add(btn28)
        bot.send_message(message.from_user.id,
                         '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É –∑–Ω–∞–Ω–∏–π, –ø–æ–ª—É—á–∏—Ç–µ –∑–≤–∞–Ω–∏–µ –î–∂–µ–¥–∞—è –æ—Ä–¥–µ–Ω–∞ –¶–∏—Ñ—Ä–æ–≤–æ–π –≥–∏–≥–∏–µ–Ω—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫–∞—á–∞—Ç—å —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ –æ—Ç –ö–∏–±–µ—Ä–ø—Ä–æ—Ç–µ–∫—Ç–∞',
                         reply_markup=markup)
        bot.register_next_step_handler(message, test)
    elif message.text == 'üëÄ –û–± –∞–≤—Ç–æ—Ä–∞—Ö':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn29 = types.KeyboardButton('–ú–µ–Ω—é')
        markup.add(btn29)
        bot.send_message(message.from_user.id,
                         '–î–∞–Ω–Ω—ã–π –±–æ—Ç –±—ã–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π "–ú–ê–û–£ –ì–∏–º–Ω–∞–∑–∏—è –≥–æ—Ä–æ–¥–∞ –Æ—Ä–≥–∏" - –†–æ–≥–æ–≤ –ü—ë—Ç—Ä, –ü–æ–ª—É—Ö–∏–Ω –ê–ª–µ–∫—Å–µ–π, –î—Ä–æ–Ω–æ–≤ –õ–µ–≤, –ö—É–ø—Ü–æ–≤ –ò–ª—å—è, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å - —É—á–∏—Ç–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏ –¢–µ—Ä–µ–Ω—Ç—å–µ–≤–∞ –ï–ª–µ–Ω–∞ –í–∞–ª–µ—Ä—å–µ–≤–Ω–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ –ö–∏–±–µ—Ä–ó–∞–±–æ—Ç—É - https://cyber-care.ru/. –°—Å—ã–ª–∫–∞ –Ω–∞ –ö–∏–±–µ—Ä–ü—Ä–æ—Ç–µ–∫—Ç - https://cyberprotect.ru/',
                         reply_markup=markup)
        bot.register_next_step_handler(message, menu)


def test(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn29 = types.KeyboardButton('–ú–µ–Ω—é')
    markup.add(btn29)
    if message.text == '–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç':
        bot.send_message(message.from_user.id, 'https://forms.yandex.ru/cloud/665528a43e9d08252ef19336/',
                         reply_markup=markup)
        bot.register_next_step_handler(message, menu)


def reg_again(message):
    if message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ':
        connection = sqlite3.connect('db/data.db')
        cursor = connection.cursor()
        cursor.execute('DELETE FROM users WHERE user_id = ?', (message.from_user.id,))
        first_question(message)
        connection.commit()
    else:
        menu(message)
    if message.text == "–û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ":
        conn = sqlite3.connect('db/data.db')
        cursor = conn.cursor()
        new_value = str(A)
        cursor.execute("SELECT status FROM users WHERE user_id = ?", (user_id,))
        row = cursor.fetchone()
        if row is not None:
            current_value = row[0]
            sum_value = current_value + new_value
            cursor.execute("UPDATE users SET status=?  WHERE user_id = ?", (sum_value, user_id))
            conn.commit()

        else:

            bot.send_message(message.from_user.id, "–ú–µ–Ω—é")
    elif message.text == "–í—ã–ø–æ–ª–Ω–µ–Ω–æ":
        bot.send_message(message.from_user.id, "–í—ã–ø–æ–ª–Ω–µ–Ω–æ")


bot.polling(none_stop=True, interval=0)


